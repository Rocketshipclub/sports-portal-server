{"version":3,"sources":["components/Navigation/Navigation.js","components/Main.js","components/Cards/PlayerCard/PlayerCard.js","containers/PlayerPage/PlayersPage.js","containers/PlayerPage/PlayerPage.js","components/Cards/TeamCard/TeamCard.js","containers/TeamsPage/TeamsPage.js","containers/TeamsPage/TeamPage.js","containers/Portal.js","App.js","serviceWorker.js","index.js","components/Cards/GroupCard.module.css","components/Navigation/Navigation.module.css","containers/PlayerPage/PlayerPage.module.css"],"names":["navigation","props","react_default","a","createElement","Navbar_default","className","classes","bg","Brand","react_router_dom","style","textDecoration","color","to","exact","Toggle","aria-controls","Collapse","id","Nav_default","lib","Link","activeStyle","borderBottom","main","playercard","playerId","Card_default","card","Img","variant","image","src","Body","Title","name","Subtitle","paddingBottom","stats","kills","deaths","assists","kda","PlayersPage","state","players","filteredPlayers","sortBy","ascending","roles","Top","Jungle","Mid","ADC","Support","handleSorting","param","_this","setState","handleChange","handleFilteringRole","role","changedRoles","filterRoles","sortByKills","sort","playerA","playerB","sortByAssists","sortByDeaths","sortByTeam","team","sortByKDA","Object","toConsumableArray","selectedRoles","keys","filter","key","player","includes","_this2","this","axios","get","then","response","data","_this3","map","Col_default","md","PlayerCard","click","playerSelectedHandler","Container_default","Button_default","onClick","Form_default","Check","type","label","onChange","inline","defaultChecked","Row_default","paddingTop","CardGroup_default","Component","PlayerPage","bio","realName","nationality","age","teamLogo","teamName","match","params","console","log","title","smallTitle","s","Image_default","fluid","teamcard","teamId","padding","wins","losses","TeamsPage","teams","TeamCard","logo","short","reverse","TeamPage","getData","_callee","playerData","regenerator_default","wrap","_context","prev","next","sent","stop","Portal","Navigation","react_router","path","component","Main","App","containers_Portal","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"iQA2BeA,EAnBI,SAACC,GAChB,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,UAAWC,IAAQC,IACvBN,EAAAC,EAAAC,cAACC,EAAAF,EAAOM,MAAR,KAAeP,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,MAAO,CAACC,eAAe,OAAQC,MAAM,SAAUC,GAAG,IAAIC,MAAM,QAAlE,iBACfb,EAAAC,EAAAC,cAACC,EAAAF,EAAOa,OAAR,CAAeC,gBAAc,qBAC7Bf,EAAAC,EAAAC,cAACC,EAAAF,EAAOe,SAAR,CAAiBC,GAAG,oBAChBjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAKG,UAAU,WACfJ,EAAAC,EAAAC,cAACiB,EAAA,cAAD,CAAef,UAAWC,IAAQe,KAAMR,GAAG,WAAWC,OAAK,EAACQ,YAAa,CAACV,MAAO,UAAWW,aAAa,oBACrGtB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAImB,KAAL,iBAEJpB,EAAAC,EAAAC,cAACiB,EAAA,cAAD,CAAef,UAAWC,IAAQe,KAAMR,GAAG,SAASC,OAAK,EAACQ,YAAa,CAACV,MAAO,UAAWW,aAAa,oBACnGtB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAImB,KAAL,mBCXLG,EANF,SAACxB,GACV,OAAQC,EAAAC,EAAAC,cAAA,oFCoBGsB,EAlBI,SAACzB,GAEhB,OACIC,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,MAAO,CAACC,eAAe,OAAQC,MAAM,SAAUC,GAAI,YAAcb,EAAM0B,UACrEzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAMG,UAAWC,IAAQsB,MACzB3B,EAAAC,EAAAC,cAACwB,EAAAzB,EAAK2B,IAAN,CAAUC,QAAQ,MAAMzB,UAAWC,IAAQyB,MAAOC,IAAKhC,EAAM+B,QAC7D9B,EAAAC,EAAAC,cAACwB,EAAAzB,EAAK+B,KAAN,KACIhC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAKgC,MAAN,KAAalC,EAAMmC,MACnBlC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAKkC,SAAN,CAAe1B,MAAO,CAAC2B,cAAc,QAArC,UAAqDrC,EAAMsC,MAAMC,OACjEtC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAKkC,SAAN,CAAe1B,MAAO,CAAC2B,cAAc,QAArC,WAAsDrC,EAAMsC,MAAME,QAClEvC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAKkC,SAAN,CAAe1B,MAAO,CAAC2B,cAAc,QAArC,YAAuDrC,EAAMsC,MAAMG,SACnExC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAKkC,SAAN,aAAqBpC,EAAM0C,+GCoIhCC,6MAzIXC,MAAQ,CACJC,QAAS,GACTC,gBAAiB,GACjBC,OAAQ,QACRC,WAAW,EACXC,MAAO,CACHC,KAAK,EACLC,QAAQ,EACRC,KAAK,EACLC,KAAK,EACLC,SAAS,MAYjBC,cAAgB,SAACC,GACbC,EAAKC,SAAS,CAACX,OAAOS,OAG1BG,aAAe,WACXF,EAAKC,SAAS,CAACV,WAAYS,EAAKb,MAAMI,eAG1CY,oBAAsB,SAACC,GACnB,IAAMC,EAAeL,EAAKb,MAAMK,MAChCa,EAAaD,IAASC,EAAaD,GACnCJ,EAAKC,SAAS,CAACT,MAAOa,IACtBL,EAAKM,iBAITC,YAAc,WACVP,EAAKb,MAAMI,UACPS,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQ5B,MAAMC,MAAQ4B,EAAQ7B,MAAMC,MAAS,GAAK,IACzGkB,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQ5B,MAAMC,MAAQ4B,EAAQ7B,MAAMC,MAAS,GAAK,OAGjH6B,cAAgB,WACZX,EAAKb,MAAMI,UACPS,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQ5B,MAAMG,QAAU0B,EAAQ7B,MAAMG,QAAW,GAAK,IAC7GgB,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQ5B,MAAMG,QAAU0B,EAAQ7B,MAAMG,QAAW,GAAK,OAGrH4B,aAAe,WACXZ,EAAKb,MAAMI,UACPS,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQ5B,MAAME,OAAS2B,EAAQ7B,MAAME,OAAU,GAAK,IAC3GiB,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQ5B,MAAME,OAAS2B,EAAQ7B,MAAME,OAAU,GAAK,OAGnH8B,WAAa,WACTb,EAAKb,MAAMI,UACPS,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQK,KAAOJ,EAAQI,KAAQ,GAAK,IAC3Fd,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQK,KAAOJ,EAAQI,KAAQ,GAAK,OAGnGC,UAAY,WACRf,EAAKb,MAAMI,UACPS,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQxB,IAAMyB,EAAQzB,IAAO,GAAK,IACzFe,EAAKb,MAAME,gBAAgBmB,KAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQxB,IAAMyB,EAAQzB,IAAO,GAAK,OAGjGqB,YAAc,WACV,IAAIlB,EAAO4B,OAAAC,EAAA,EAAAD,CAAOhB,EAAKb,MAAMC,SACvB8B,EAAgBF,OAAOG,KAAKnB,EAAKb,MAAMK,OAAO4B,OAAO,SAACC,GACxD,OAAOrB,EAAKb,MAAMK,MAAM6B,KAE5BjC,EAAUA,EAAQgC,OAAO,SAAAE,GAAM,OAAIJ,EAAcK,SAASD,EAAOlB,QACjEJ,EAAKC,SAAS,CAACZ,gBAAiBD,wFA5DhB,IAAAoC,EAAAC,KAChBC,IAAMC,IAAI,qCACLC,KAAK,SAAAC,GACFL,EAAKvB,SAAS,CAACb,QAASyC,EAASC,OACjCN,EAAKlB,iDA4DT,IAAAyB,EAAAN,KACJ,OAAOA,KAAKtC,MAAMG,QACd,IAAK,QACDmC,KAAKlB,cACL,MACJ,IAAK,SACDkB,KAAKb,eACL,MACJ,IAAK,UACDa,KAAKd,gBACL,MACJ,IAAK,OACDc,KAAKZ,aACL,MACJ,IAAK,MACDY,KAAKV,YAKb,IAAI3B,EAAUqC,KAAKtC,MAAME,gBAAgB2C,IAAI,SAAAV,GACzC,OACA9E,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,CAAQyF,GAAI,GACR1F,EAAAC,EAAAC,cAACyF,EAAD,CACA7D,MAAOgD,EAAOhD,MACdI,KAAM4C,EAAO5C,KACbG,MAAOyC,EAAOzC,MACdZ,SAAUqD,EAAOrD,SACjBgB,IAAKqC,EAAOrC,IACZmD,MAAO,kBAAML,EAAKM,4BAG1B,OACA7F,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,gBACYD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQ+F,QAAS,kBAAMT,EAAKjC,cAAc,WAA1C,SACRtD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQ+F,QAAS,kBAAMT,EAAKjC,cAAc,YAA1C,UACAtD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQ+F,QAAS,kBAAMT,EAAKjC,cAAc,aAA1C,WACAtD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQ+F,QAAS,kBAAMT,EAAKjC,cAAc,SAA1C,OACAtD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQ+F,QAAS,kBAAMT,EAAKjC,cAAc,UAA1C,QACAtD,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,KACID,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAKiG,MAAN,CAAYC,KAAK,WAAWC,MAAM,YAAYC,SAAU,kBAAMd,EAAK7B,mBAEvE1D,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,KACID,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAKiG,MAAN,CAAYI,QAAM,EAACH,KAAK,WAAWI,gBAAc,EAACH,MAAM,MAAMC,SAAU,kBAAMd,EAAK5B,oBAAoB,UACvG3D,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAKiG,MAAN,CAAYI,QAAM,EAACH,KAAK,WAAWI,gBAAc,EAACH,MAAM,SAASC,SAAU,kBAAMd,EAAK5B,oBAAoB,aAC1G3D,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAKiG,MAAN,CAAYI,QAAM,EAACH,KAAK,WAAWI,gBAAc,EAACH,MAAM,MAAMC,SAAU,kBAAMd,EAAK5B,oBAAoB,UACvG3D,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAKiG,MAAN,CAAYI,QAAM,EAACH,KAAK,WAAWI,gBAAc,EAACH,MAAM,MAAMC,SAAU,kBAAMd,EAAK5B,oBAAoB,UACvG3D,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAKiG,MAAN,CAAYI,QAAM,EAACH,KAAK,WAAWI,gBAAc,EAACH,MAAM,UAAUC,SAAU,kBAAMd,EAAK5B,oBAAoB,eAG/G3D,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,CAAKQ,MAAO,CAACgG,WAAW,SACpBzG,EAAAC,EAAAC,cAACwG,EAAAzG,EAAD,KACC2C,YAnIS+D,+CC2DXC,6MA5DXjE,MAAQ,CACJT,KAAM,GACNJ,MAAO,GACPwC,KAAM,GACNhC,MAAO,EACPC,OAAQ,EACRC,QAAS,EACTqE,IAAK,GACLC,SAAU,GACVC,YAAa,GACbC,IAAK,EACLC,SAAU,GACVC,SAAU,GACVtD,KAAM,uFAGU,IAAAoB,EAAAC,KAChBC,IAAMC,IAAI,gBAAkBF,KAAKlF,MAAMoH,MAAMC,OAAOnG,IAC/CmE,KAAK,SAAAC,GACFgC,QAAQC,IAAIjC,EAASC,KAAKhB,MAC1BU,EAAKvB,SAAS,CACVvB,KAAMmD,EAASC,KAAKpD,KACpBJ,MAAOuD,EAASC,KAAKxD,MACrBwC,KAAMe,EAASC,KAAKhB,KACpBhC,MAAO+C,EAASC,KAAKjD,MAAMC,MAC3BC,OAAQ8C,EAASC,KAAKjD,MAAME,OAC5BC,QAAS6C,EAASC,KAAKjD,MAAMG,QAC7BsE,SAAUzB,EAASC,KAAKwB,SACxBC,YAAa1B,EAASC,KAAKyB,YAC3BC,IAAK3B,EAASC,KAAK0B,IACnBpD,KAAMyB,EAASC,KAAK1B,0CAMhC,OACI5D,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,KACID,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQkH,OACxBvH,EAAAC,EAAAC,cAAA,UAAK+E,KAAKtC,MAAMT,MAChBlC,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAQmH,YAAavC,KAAKtC,MAAMmE,WAE/C9G,EAAAC,EAAAC,cAAA,UAAK+E,KAAKtC,MAAMuE,UAChBlH,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,KACID,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,CAAQwH,EAAG,GACPzH,EAAAC,EAAAC,cAACwH,EAAAzH,EAAD,CAAO8B,IAAKkD,KAAKtC,MAAMb,MAAO6F,OAAK,KAEvC3H,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,CAAQwH,EAAG,GACPzH,EAAAC,EAAAC,cAAA,SAAI+E,KAAKtC,MAAMiB,MACf5D,EAAAC,EAAAC,cAAA,mBAAW+E,KAAKtC,MAAML,MAAtB,cAAwC2C,KAAKtC,MAAMJ,OAAnD,eAAuE0C,KAAKtC,MAAMH,SAClFxC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIO,MAAO,CAACE,MAAM,YAAlB,OACAX,EAAAC,EAAAC,cAAA,odArDCyG,aCgBViB,EAjBE,SAAC7H,GACd,OACIC,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,CAAQyF,GAAI,EAAG+B,EAAG,GACdzH,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,MAAO,CAACC,eAAe,OAAQC,MAAM,SAAUC,GAAI,UAAYb,EAAM8H,QACvE7H,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAMG,UAAWC,IAAQsB,MACzB3B,EAAAC,EAAAC,cAACwB,EAAAzB,EAAK2B,IAAN,CAAUC,QAAQ,MAAMzB,UAAWC,IAAQyB,MAAOrB,MAAO,CAACqH,QAAQ,OAAQ/F,IAAKhC,EAAM+B,QACrF9B,EAAAC,EAAAC,cAACwB,EAAAzB,EAAK+B,KAAN,KACIhC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAKgC,MAAN,KAAalC,EAAMmC,MACnBlC,EAAAC,EAAAC,cAACwB,EAAAzB,EAAKkC,SAAN,cAAsBpC,EAAMsC,MAAM0F,MAClC/H,EAAAC,EAAAC,cAACwB,EAAAzB,EAAKkC,SAAN,gBAAwBpC,EAAMsC,MAAM2F,aCwBzCC,6MAjCXtF,MAAQ,CACJuF,MAAO,uFAGS,IAAAlD,EAAAC,KAChBC,IAAMC,IAAI,mCACLC,KAAK,SAAAC,GACFL,EAAKvB,SAAS,CAACyE,MAAO7C,EAASC,0CAKvC,IAAM4C,EAAQjD,KAAKtC,MAAMuF,MAAM1C,IAAI,SAAAlB,GAC/B,OACItE,EAAAC,EAAAC,cAACiI,EAAD,CAAUtD,IAAKP,EAAKuD,OACpB/F,MAAOwC,EAAK8D,KACZlG,KAAMoC,EAAKpC,KACXG,MAAOiC,EAAKjC,MACZgG,MAAO/D,EAAK+D,MACZR,OAAQvD,EAAKuD,WAElBS,UAEH,OACItI,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,KACID,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,KACKiI,WA3BGvB,sCCgET4B,8MA5DX5F,MAAQ,CACJT,KAAM,GACNkG,KAAM,GACNxF,QAAS,GACTyF,MAAO,GACPN,KAAM,GACNC,OAAQ,MAOZQ,6BAAU,SAAAC,IAAA,IAAAnD,EAAAoD,EAAA,OAAAC,EAAA1I,EAAA2I,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACW7D,IAAMC,IAAI,mCAAqC3B,EAAKzD,MAAMoH,MAAMC,OAAOnG,IADlF,cACFqE,EADEuD,EAAAG,KAAAH,EAAAE,KAAA,EAGiB7D,IAAMC,IAAI,mCAAqC3B,EAAKzD,MAAMoH,MAAMC,OAAOnG,GAC5E,YAJZ,OAGFyH,EAHEG,EAAAG,KAMNxF,EAAKC,SAAS,CACNvB,KAAMoD,EAAKA,KAAKpD,KAChBkG,KAAM9C,EAAKA,KAAK8C,KAChBC,MAAO/C,EAAKA,KAAKjD,MAAMgG,MACvBN,KAAMzC,EAAKA,KAAKjD,MAAM0F,KACtBC,OAAQ1C,EAAKA,KAAKjD,MAAM2F,OACxBpF,QAAS8F,EAAWpD,OAZtB,wBAAAuD,EAAAI,SAAAR,yFAHNxD,KAAKuD,2CAoBL,IAAI5F,EAAUqC,KAAKtC,MAAMC,QAAQ4C,IAAI,SAAAV,GACjC,OACA9E,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,CAAQyF,GAAI,GACR1F,EAAAC,EAAAC,cAACyF,EAAD,CACA7D,MAAOgD,EAAOhD,MACdI,KAAM4C,EAAO5C,KACbG,MAAOyC,EAAOzC,MACdZ,SAAUqD,EAAOrD,cAEzB,OACIzB,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,KACID,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,KACID,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,CAAQyF,GAAI,EAAG+B,EAAG,GACdzH,EAAAC,EAAAC,cAACwH,EAAAzH,EAAD,CAAO8B,IAAKkD,KAAKtC,MAAMyF,KAAMT,OAAK,KAEtC3H,EAAAC,EAAAC,cAAA,UAAK+E,KAAKtC,MAAMT,OAEpBlC,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,KACID,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,KACID,EAAAC,EAAAC,cAAA,KAAGO,MAAO,CAACqH,QAAQ,SAAnB,mcAGR9H,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,KACK2C,WAtDE+D,aCkBNuC,8MAjBbvG,MAAQ,2EAIN,OACE3C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiJ,EAAD,MACAnJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOC,KAAK,IAAIxI,OAAK,EAACyI,UAAWC,IACjCvJ,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOC,KAAK,WAAWxI,OAAK,EAACyI,UAAW5G,IACxC1C,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOC,KAAK,eAAexI,OAAK,EAACyI,UAAW1C,IAC5C5G,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOC,KAAK,SAASxI,OAAK,EAACyI,UAAWrB,IACtCjI,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOC,KAAK,aAAaxI,OAAK,EAACyI,UAAWf,aAZjC5B,aCSN6C,8MAZb7G,MAAQ,2EAIN,OACE3C,EAAAC,EAAAC,cAACM,EAAA,cAAD,KACER,EAAAC,EAAAC,cAACuJ,GAAD,cARU9C,aCQE+C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1C,MACvB,2DCZN2C,IAASC,OAAO/J,EAAAC,EAAAC,cAAC8J,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjF,KAAK,SAAAkF,GACjCA,EAAaC,mCElInBC,EAAAC,QAAA,CAAkB9I,KAAA,wBAAAG,MAAA,8CCAlB0I,EAAAC,QAAA,CAAkBrJ,KAAA,8CCAlBoJ,EAAAC,QAAA,CAAkBjD,WAAA,+BAAAD,MAAA","file":"static/js/main.15e4019a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Link } from 'react-router-dom';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport classes from './Navigation.module.css';\r\n\r\nconst navigation = (props) => {\r\n    return (\r\n        <Navbar className={classes.bg}>\r\n            <Navbar.Brand ><Link style={{textDecoration:'none', color:'black'}} to=\"/\" exact=\"true\">Sport Portal</Link></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <LinkContainer className={classes.Link} to=\"/players\" exact activeStyle={{color: '#2B2D42', borderBottom:'1px solid black'}}>\r\n                    <Nav.Link>Players</Nav.Link>\r\n                </LinkContainer>\r\n                <LinkContainer className={classes.Link} to=\"/teams\" exact activeStyle={{color: '#2B2D42', borderBottom:'1px solid black'}}>\r\n                    <Nav.Link>Teams</Nav.Link>\r\n                </LinkContainer>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default navigation;","import React from 'react';\r\n\r\nconst main = (props) => {\r\n    return (<div>\r\n       Main Page!\r\n        </div>);\r\n}\r\n\r\nexport default main;","import React from 'react';\r\nimport classes from '../GroupCard.module.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst playercard = (props) => {\r\n\r\n    return (\r\n        <Link style={{textDecoration:'none', color:'black'}} to={'/players/' + props.playerId}>\r\n                <Card className={classes.card}>\r\n                <Card.Img variant=\"top\" className={classes.image} src={props.image} />\r\n                <Card.Body>\r\n                    <Card.Title>{props.name}</Card.Title>\r\n                    <Card.Subtitle style={{paddingBottom:'5px'}}>Kills: {props.stats.kills}</Card.Subtitle>\r\n                    <Card.Subtitle style={{paddingBottom:'5px'}}>Deaths: {props.stats.deaths}</Card.Subtitle>\r\n                    <Card.Subtitle style={{paddingBottom:'5px'}}>Assists: {props.stats.assists}</Card.Subtitle>\r\n                    <Card.Subtitle>KDA: {props.kda}</Card.Subtitle>\r\n                </Card.Body>\r\n            </Card>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default playercard;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport PlayerCard from '../../components/Cards/PlayerCard/PlayerCard';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport Column from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass PlayersPage extends Component{\r\n    state = {\r\n        players: [],\r\n        filteredPlayers: [],\r\n        sortBy: 'kills',\r\n        ascending: false,\r\n        roles: {\r\n            Top: true,\r\n            Jungle: true,\r\n            Mid: true,\r\n            ADC: true,\r\n            Support: true\r\n        }\r\n      }\r\n    \r\n    componentDidMount() {\r\n        axios.get('http://localhost:3001/api/players')\r\n            .then(response => {\r\n                this.setState({players: response.data});\r\n                this.filterRoles();\r\n        });\r\n    }\r\n\r\n    handleSorting = (param) => {\r\n        this.setState({sortBy:param})\r\n    }\r\n\r\n    handleChange = () => {\r\n        this.setState({ascending: !this.state.ascending});\r\n    }\r\n\r\n    handleFilteringRole = (role) => {\r\n        const changedRoles = this.state.roles;\r\n        changedRoles[role] = !changedRoles[role];\r\n        this.setState({roles: changedRoles});\r\n        this.filterRoles();\r\n    }\r\n\r\n    // TODO move sorting to external utils class\r\n    sortByKills = () => {\r\n        this.state.ascending ? \r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.stats.kills > playerB.stats.kills) ? 1 : -1) :\r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.stats.kills < playerB.stats.kills) ? 1 : -1)\r\n    }\r\n\r\n    sortByAssists = () => {\r\n        this.state.ascending ? \r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.stats.assists > playerB.stats.assists) ? 1 : -1) :\r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.stats.assists < playerB.stats.assists) ? 1 : -1)\r\n    }\r\n\r\n    sortByDeaths = () => {\r\n        this.state.ascending ? \r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.stats.deaths > playerB.stats.deaths) ? 1 : -1) :\r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.stats.deaths < playerB.stats.deaths) ? 1 : -1) \r\n    }\r\n\r\n    sortByTeam = () => {\r\n        this.state.ascending ?\r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.team > playerB.team) ? 1 : -1) :\r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.team < playerB.team) ? 1 : -1)\r\n    }\r\n\r\n    sortByKDA = () => {\r\n        this.state.ascending ?\r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.kda > playerB.kda) ? 1 : -1) :\r\n            this.state.filteredPlayers.sort((playerA, playerB) => (playerA.kda < playerB.kda) ? 1 : -1)\r\n    }\r\n\r\n    filterRoles = () => {\r\n        let players = [...this.state.players];\r\n        const selectedRoles = Object.keys(this.state.roles).filter((key) => {\r\n            return this.state.roles[key];\r\n        });\r\n        players = players.filter(player => selectedRoles.includes(player.role));\r\n        this.setState({filteredPlayers: players})\r\n    }\r\n\r\n        \r\n    render(){\r\n        switch(this.state.sortBy){\r\n            case 'kills':\r\n                this.sortByKills();\r\n                break;\r\n            case 'deaths':\r\n                this.sortByDeaths();\r\n                break;\r\n            case 'assists':\r\n                this.sortByAssists();\r\n                break;\r\n            case 'team':\r\n                this.sortByTeam();\r\n                break;\r\n            case 'kda':\r\n                this.sortByKDA();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        let players = this.state.filteredPlayers.map(player => {\r\n            return (\r\n            <Column md={3}>\r\n                <PlayerCard\r\n                image={player.image} \r\n                name={player.name} \r\n                stats={player.stats}\r\n                playerId={player.playerId}\r\n                kda={player.kda}\r\n                click={() => this.playerSelectedHandler}/></Column>\r\n        )});\r\n        \r\n        return (\r\n        <Container>\r\n            Sort by <Button onClick={() => this.handleSorting('kills')}>Kills</Button> \r\n            <Button onClick={() => this.handleSorting('deaths')}>Deaths</Button> \r\n            <Button onClick={() => this.handleSorting('assists')}>Assists</Button>\r\n            <Button onClick={() => this.handleSorting('kda')}>KDA</Button>\r\n            <Button onClick={() => this.handleSorting('team')}>Team</Button>\r\n            <Form>\r\n                <Form.Check type=\"checkbox\" label=\"Ascending\" onChange={() => this.handleChange()}/> \r\n            </Form>\r\n            <Form>\r\n                <Form.Check inline type=\"checkbox\" defaultChecked label=\"Top\" onChange={() => this.handleFilteringRole('Top')}/> \r\n                <Form.Check inline type=\"checkbox\" defaultChecked label=\"Jungle\" onChange={() => this.handleFilteringRole('Jungle')}/>\r\n                <Form.Check inline type=\"checkbox\" defaultChecked label=\"Mid\" onChange={() => this.handleFilteringRole('Mid')}/>\r\n                <Form.Check inline type=\"checkbox\" defaultChecked label=\"ADC\" onChange={() => this.handleFilteringRole('ADC')}/>\r\n                <Form.Check inline type=\"checkbox\" defaultChecked label=\"Support\" onChange={() => this.handleFilteringRole('Support')}/>\r\n            </Form>\r\n\r\n            <Row style={{paddingTop:'16px'}}>\r\n                <CardGroup>\r\n                {players}\r\n                </CardGroup>\r\n            </Row>\r\n        </Container>);\r\n    };\r\n}\r\n\r\nexport default PlayersPage;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Column from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image'\r\nimport classes from './PlayerPage.module.css';\r\n\r\nclass PlayerPage extends Component {\r\n    state = {\r\n        name: '',\r\n        image: '',\r\n        team: '',\r\n        kills: 0,\r\n        deaths: 0,\r\n        assists: 0,\r\n        bio: '',\r\n        realName: '',\r\n        nationality: '',\r\n        age: 0,\r\n        teamLogo: '',\r\n        teamName: '',\r\n        role: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('/api/players/' + this.props.match.params.id)\r\n            .then(response => {\r\n                console.log(response.data.team)\r\n                this.setState({\r\n                    name: response.data.name,\r\n                    image: response.data.image,\r\n                    team: response.data.team,\r\n                    kills: response.data.stats.kills,\r\n                    deaths: response.data.stats.deaths,\r\n                    assists: response.data.stats.assists,\r\n                    realName: response.data.realName,\r\n                    nationality: response.data.nationality,\r\n                    age: response.data.age,\r\n                    role: response.data.role\r\n                })\r\n            })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Container>\r\n                <div className={classes.title}>\r\n                <h1>{this.state.name}</h1>\r\n                <h4 className={classes.smallTitle}>{this.state.realName}</h4>\r\n                </div>\r\n                <h4>{this.state.teamName}</h4>\r\n                <Row>\r\n                    <Column s={8}>\r\n                        <Image src={this.state.image} fluid/>\r\n                    </Column>\r\n                    <Column s={2}>\r\n                        <b>{this.state.role}</b>\r\n                        <p>Kills: {this.state.kills} / Deaths: {this.state.deaths} / Assists: {this.state.assists}</p>\r\n                        <hr></hr>\r\n                        <h3 style={{color:'#2B2D42'}}>Bio</h3>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                    </Column>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerPage;","import React from 'react';\r\nimport Column from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport classes from '../GroupCard.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst teamcard = (props) => {\r\n    return (\r\n        <Column md={3} s={1}>\r\n            <Link style={{textDecoration:'none', color:'black'}} to={'/teams/' + props.teamId}>\r\n                <Card className={classes.card}>\r\n                <Card.Img variant=\"top\" className={classes.image} style={{padding:'5px'}} src={props.image} />\r\n                <Card.Body>\r\n                    <Card.Title>{props.name}</Card.Title>\r\n                    <Card.Subtitle>Wins: {props.stats.wins}</Card.Subtitle>\r\n                    <Card.Subtitle>Losses: {props.stats.losses}</Card.Subtitle>\r\n                </Card.Body>\r\n            </Card>\r\n            </Link>\r\n        </Column>   \r\n    );\r\n}\r\n\r\nexport default teamcard;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport TeamCard from '../../components/Cards/TeamCard/TeamCard';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nclass TeamsPage extends Component{\r\n    state = {\r\n        teams: [],\r\n      }\r\n    \r\n    componentDidMount() {\r\n        axios.get('http://localhost:3001/api/teams')\r\n            .then(response => {\r\n                this.setState({teams: response.data});\r\n            });\r\n    }\r\n\r\n    render(){\r\n        const teams = this.state.teams.map(team => {\r\n            return (\r\n                <TeamCard key={team.teamId} \r\n                image={team.logo} \r\n                name={team.name} \r\n                stats={team.stats}\r\n                short={team.short}\r\n                teamId={team.teamId}\r\n                />)\r\n        }).reverse(); // reverse the final array because firebase returns players in ascending order\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    {teams}\r\n                </Row>\r\n            </Container>\r\n        );\r\n    };\r\n}\r\n\r\nexport default TeamsPage;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Column from 'react-bootstrap/Col';\r\n\r\nimport PlayerCard from '../../components/Cards/PlayerCard/PlayerCard';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nclass TeamPage extends Component {\r\n    state = {\r\n        name: '',\r\n        logo: '',\r\n        players: [],\r\n        short: '',\r\n        wins: '',\r\n        losses: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData = async () => {\r\n        let data = await axios.get('http://localhost:3001/api/teams/' + this.props.match.params.id);\r\n\r\n        let playerData = await axios.get('http://localhost:3001/api/teams/' + this.props.match.params.id \r\n                        + '/players');\r\n        \r\n        this.setState({\r\n                name: data.data.name,\r\n                logo: data.data.logo,\r\n                short: data.data.stats.short,\r\n                wins: data.data.stats.wins,\r\n                losses: data.data.stats.losses,\r\n                players: playerData.data\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        let players = this.state.players.map(player => {\r\n            return (\r\n            <Column md={2}>\r\n                <PlayerCard\r\n                image={player.image} \r\n                name={player.name} \r\n                stats={player.stats}\r\n                playerId={player.playerId}/></Column>\r\n            )});\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Column md={1} s={2}>\r\n                        <Image src={this.state.logo} fluid/>\r\n                    </Column>\r\n                    <h1>{this.state.name}</h1>\r\n                </Row>\r\n                <Row>\r\n                    <Column>\r\n                        <p style={{padding:'15px'}}>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                    </Column>\r\n                </Row>\r\n                <Row>\r\n                    {players}\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TeamPage;","import React, { Component } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport Navigation from '../components/Navigation/Navigation';\r\nimport Main from '../components/Main';\r\nimport PlayersPage from './PlayerPage/PlayersPage';\r\nimport PlayerPage from './PlayerPage/PlayerPage';\r\nimport TeamsPage from './TeamsPage/TeamsPage';\r\n import TeamPage from './TeamsPage/TeamPage';\r\n\r\nclass Portal extends Component {\r\n    state = {\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n        <div>\r\n            <Navigation />\r\n            <Route path=\"/\" exact component={Main}/>\r\n            <Route path=\"/players\" exact component={PlayersPage} />\r\n            <Route path=\"/players/:id\" exact component={PlayerPage}/>\r\n            <Route path=\"/teams\" exact component={TeamsPage} />\r\n            <Route path=\"/teams/:id\" exact component={TeamPage} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Portal;","import React, { Component } from \"react\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Portal from './containers/Portal';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <BrowserRouter>\r\n        <Portal />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"GroupCard_card__2pnke\",\"image\":\"GroupCard_image__3u56P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"Navigation_Link__2uWPy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallTitle\":\"PlayerPage_smallTitle__2ajgq\",\"title\":\"PlayerPage_title__1nwls\"};"],"sourceRoot":""}